{
    "swagger": "2.0",
    "info": {
        "description": "This is a exmaple of Todo API for K8S traning",
        "title": "Todo API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/api/todo": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Create todo",
                "parameters": [
                    {
                        "description": "Todo to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/todo.ReqBodyTodo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The created todo",
                        "schema": {
                            "$ref": "#/definitions/todo.Todo"
                        }
                    }
                }
            }
        },
        "/api/todo/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Delete todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of todo to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The deleted todo",
                        "schema": {
                            "$ref": "#/definitions/todo.Todo"
                        }
                    }
                }
            },
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Finish todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of todo to finish",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The updated todo",
                        "schema": {
                            "$ref": "#/definitions/todo.Todo"
                        }
                    }
                }
            }
        },
        "/api/todos": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "List todo",
                "responses": {
                    "200": {
                        "description": "List of all todos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todo.Todo"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "todo.ReqBodyTodo": {
            "type": "object",
            "properties": {
                "finished": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "todo.Todo": {
            "type": "object",
            "properties": {
                "finished": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}